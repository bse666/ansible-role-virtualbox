---
# tasks file for mpx.virtualbox

- name: Install build-esential and dkms (prepare)
  apt:
    name: "{{ item }}"
    state: latest
    update_cache: yes
  with_items:
    - build-essential
    - dkms
    - unzip

- name: Add VirtualBox repo key
  apt_key:
    url: http://download.virtualbox.org/virtualbox/debian/oracle_vbox.asc
    state: present

- name: Add VirtualBox repo
  apt_repository:
    repo: 'deb http://download.virtualbox.org/virtualbox/debian trusty contrib'
    state: present
    update_cache: yes

- name: Install virtualbox in given version
  apt:
    name: virtualbox-{{virtualbox_version}}
    state: present

- name: Check if extension pack is already installed
  shell: "VBoxManage list extpacks"
  register: extpack_list

- name: Download VirtualBox extension pack
  shell: "cd /tmp/ &&  wget http://download.virtualbox.org/virtualbox/{{virtualbox_version}}.2/Oracle_VM_VirtualBox_Extension_Pack-{{virtualbox_version}}.2.vbox-extpack"
  when: 'extpack_list.stdout == "Extension Packs: 0"'

- name: Install VirtualBox extension pack
  shell: "VBoxManage extpack install --replace /tmp/Oracle_VM_VirtualBox_Extension_Pack-{{virtualbox_version}}.2.vbox-extpack"
  when: 'extpack_list.stdout == "Extension Packs: 0"'

- name: Add user to run virtualbox deamon
  user:
    name: "{{virtualbox_user}}"
    createhome: yes
    shell: '/bin/bash'
    state: present
    append: yes # append groups
    groups: vboxusers
    update_password: on_create # only touch PW on user creation
    password: "{{virtualbox_user_sha_pw}}"

- name: Create a folder for ISO files to be shared with phpVirtualBox
  file:
    path: /home/{{virtualbox_user}}/isos
    owner: "{{virtualbox_user}}"
    group: vboxusers
    mode: 0770
    state: directory

#- name: Initialize vbox drivers
#  command: "/etc/init.d/vboxdrv setup"
#  register: vboxdrv_setup

#- name: Check status of vbox drivers
#  command: "/etc/init.d/vboxdrv status"
#  register: vboxdrv_status

#- name: Output vbox status
#  debug:
#    msg: "{{vboxdrv_status.stdout}}"

# phpVirtualBox setup:

- name: Install Apache and PHP5 with necessary extensions
  apt:
    name: "{{item}}"
    state: present
  with_items:
    - apache2
    - php5
    - php5-common
    - php-soap
    - php5-gd

- name: Make sure webdir for phpVirtualBox exists
  file:
    path: /var/www/html/
    state: directory

- name: Determine if phpVirtualBox was already installed (use vboxinit file as inidicator)
  stat:
    path: /var/www/html/vboxinit
  register: phpvirtualbox_file

- name: Delete default index.html from apache
  file:
    path: /var/www/html/index.html
    state: absent
  when: phpvirtualbox_file.stat.exists == False

- name: Download phpVirtualBox
  shell: "cd /tmp/ &&  wget http://sourceforge.net/projects/phpvirtualbox/files/phpvirtualbox-{{virtualbox_version}}-2.zip"
  when: phpvirtualbox_file.stat.exists == False

- name: Install phpVirtualBox
  unarchive:
    copy: no # do not copy from ansible machine
    src: "/tmp/phpvirtualbox-{{virtualbox_version}}-2.zip"
    dest: "/var/www/html/"
    # Will result in a folder like phpvirtualbox-5.0.2/
  when: phpvirtualbox_file.stat.exists == False

- name: Move data out of phpvirtualbox-* folder into html dir
  shell: "mv /var/www/html/phpvirtualbox-*/* /var/www/html/ && rm -r /var/www/html/phpvirtualbox-*/"
  when: phpvirtualbox_file.stat.exists == False

- name: Configure phpVirtualBox
  template:
    src: config.php.j2
    dest: /var/www/html/config.php

- name: Configure vboxweb deamon user
  template:
    src: virtualbox.j2
    dest: /etc/default/virtualbox
  notify:
    - restart vboxweb-service

- name: Enable vboxweb deamon on startub
  service:
    name: vboxweb-service
    enabled: yes
